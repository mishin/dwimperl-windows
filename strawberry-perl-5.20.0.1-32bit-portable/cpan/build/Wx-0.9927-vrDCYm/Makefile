# This Makefile is for the Wx extension to perl.
#
# It was generated automatically by MakeMaker version
# 7.1 (Revision: 71000) from the contents of
# Makefile.PL. Don't edit this file, edit Makefile.PL instead.
#
#       ANY CHANGES MADE HERE WILL BE LOST!
#
#   MakeMaker ARGV: ()
#

#   MakeMaker Parameters:

#     ABSTRACT_FROM => q[Wx.pm]
#     AUTHOR => [q[Mattia Barbon <mbarbon@cpan.org>]]
#     BUILD_REQUIRES => {  }
#     CCFLAGS => q[]
#     CONFIGURE => CODE(...)
#     CONFIGURE_REQUIRES => {  }
#     EXE_FILES => [q[script/wxperl_overload]]
#     LIBS => q[  -LC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib -lwxmsw30u_core -lwxbase30u  -lwxmsw30u_adv -lwxmsw30u_core -lwxbase30u]
#     LICENSE => q[perl]
#     META_ADD => { build_requires=>{ Alien::wxWidgets=>q[0.25], ExtUtils::MakeMaker=>q[6.48], ExtUtils::ParseXS=>q[3.15], ExtUtils::XSpp=>q[0.1602], File::Spec::Functions=>q[0.82], Test::Harness=>q[2.26], Test::More=>q[0.45], if=>q[0.03] }, configure_requires=>{ Alien::wxWidgets=>q[0.25] }, dynamic_config=>q[1], no_index=>{ directory=>[q[samples], q[script]], package=>[q[MY], q[Parse::Yapp::Driver], q[Wx::DropTarget], q[Wx::Droptarget]] }, requires=>{ Alien::wxWidgets=>q[0.25] }, resources=>{ MailingList=>q[http://lists.perl.org/list/wxperl-users.html], bugtracker=>q[http://rt.cpan.org/NoAuth/Bugs.html?Dist=Wx], homepage=>q[http://www.wxperl.it/], license=>q[http://dev.perl.org/licenses/], repository=>q[http://svn.code.sf.net/p/wxperl/code/wxPerl] } }
#     MIN_PERL_VERSION => q[5.006001]
#     NAME => q[Wx]
#     OBJECT => q[Wx.o Constant.o Controls.o Event.o Frames.o GDI.o Window.o ]
#     PMLIBDIRS => [q[lib], q[build]]
#     PREREQ_PM => { Alien::wxWidgets=>q[0.25], ExtUtils::MakeMaker=>q[6.46], ExtUtils::ParseXS=>q[3.15], ExtUtils::XSpp=>q[0.1602], File::Spec::Functions=>q[0.82], Test::Harness=>q[2.26], Test::More=>q[0.45], if=>q[0.03] }
#     TEST_REQUIRES => {  }
#     VERSION_FROM => q[Wx.pm]
#     XSOPT => q[ -nolinenumbers -noprototypes ]

#   MakeMaker 'CONFIGURE' Parameters:

#     ABSTRACT_FROM => q[Wx.pm]
#     AUTHOR => [q[Mattia Barbon <mbarbon@cpan.org>]]
#     BUILD_REQUIRES => {  }
#     CC => q[g++  -m32  -O2 -mthreads -m32 -Os  ]
#     CCFLAGS => q[]
#     CONFIGURE => CODE(...)
#     CONFIGURE_REQUIRES => {  }
#     DEFINE => q[-DHAVE_W32API_H -D__WXMSW__ -DNDEBUG -D_UNICODE -DWXUSINGDLL -DNOPCH -DNO_GCC_PRAGMA  ]
#     EXE_FILES => [q[script/wxperl_overload]]
#     INC => q[-I. -I. -IC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib -IC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\include]
#     LD => q[g++]
#     LDFROM => q[$(OBJECT) Wx_res.o ]
#     LIBS => [q[-LC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\lib -LC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib   -lwxmsw30u_core -lwxbase30u  -lwxmsw30u_adv -lwxmsw30u_core -lwxbase30u]]
#     LICENSE => q[perl]
#     META_ADD => { build_requires=>{ Alien::wxWidgets=>q[0.25], ExtUtils::MakeMaker=>q[6.48], ExtUtils::ParseXS=>q[3.15], ExtUtils::XSpp=>q[0.1602], File::Spec::Functions=>q[0.82], Test::Harness=>q[2.26], Test::More=>q[0.45], if=>q[0.03] }, configure_requires=>{ Alien::wxWidgets=>q[0.25] }, dynamic_config=>q[1], no_index=>{ directory=>[q[samples], q[script]], package=>[q[MY], q[Parse::Yapp::Driver], q[Wx::DropTarget], q[Wx::Droptarget]] }, requires=>{ Alien::wxWidgets=>q[0.25] }, resources=>{ MailingList=>q[http://lists.perl.org/list/wxperl-users.html], bugtracker=>q[http://rt.cpan.org/NoAuth/Bugs.html?Dist=Wx], homepage=>q[http://www.wxperl.it/], license=>q[http://dev.perl.org/licenses/], repository=>q[http://svn.code.sf.net/p/wxperl/code/wxPerl] } }
#     MIN_PERL_VERSION => q[5.006001]
#     NAME => q[Wx]
#     OBJECT => q[Wx.o Constant.o Controls.o Event.o Frames.o GDI.o Window.o ]
#     PMLIBDIRS => [q[lib], q[build]]
#     PREREQ_PM => { Alien::wxWidgets=>q[0.25], ExtUtils::MakeMaker=>q[6.46], ExtUtils::ParseXS=>q[3.15], ExtUtils::XSpp=>q[0.1602], File::Spec::Functions=>q[0.82], Test::Harness=>q[2.26], Test::More=>q[0.45], if=>q[0.03] }
#     TEST_REQUIRES => {  }
#     VERSION_FROM => q[Wx.pm]
#     WX => { wx_core_lib=>undef, wx_core_lib_maybe=>undef, wx_overload=>{ header=>q[cpp\ovl_const.h], source=>q[cpp\ovl_const.cpp] }, wx_top=>q[Wx.pm] }
#     XSOPT => q[ -nolinenumbers -noprototypes ]
#     clean => { FILES=>q[cpp\ovl_const.cpp cpp\ovl_const.h Opt files.lst cpp/setup.h cpp/v_cback_def.h XS/ItemContainer.xs XS/ItemContainerImmutable.xs XS/VarScrollHelperBase.xs XS/VarVScrollHelper.xs XS/VarHScrollHelper.xs XS/VarHVScrollHelper.xs overload.lst xspp wxt_* Wx_res.o Wx_def.old] }
#     depend => { Wx_res.o=>q[Wx.rc ] }
#     dynamic_lib => { INST_DYNAMIC_DEP=>q[ Wx_res.o] }

# --- MakeMaker post_initialize section:


# --- MakeMaker const_config section:

# These definitions are from config.sh (via C:/Users/TOSH/Documents/GitHub/dwimperl-windows/strawberry-perl-5.20.0.1-32bit-portable/perl/lib/Config.pm).
# They may have been overridden via Makefile.PL or on the command line.
AR = ar
CC = g++  -m32  -O2 -mthreads -m32 -Os  
CCCDLFLAGS =  
CCDLFLAGS =  
DLEXT = xs.dll
DLSRC = dl_win32.xs
EXE_EXT = .exe
FULL_AR = 
LD = g++
LDDLFLAGS = -mdll -s -L"C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\CORE" -L"C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\lib"
LDFLAGS = -s -L"C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\CORE" -L"C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\lib"
LIBC = 
LIB_EXT = .a
OBJ_EXT = .o
OSNAME = MSWin32
OSVERS = 6.2
RANLIB = rem
SITELIBEXP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib
SITEARCHEXP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib
SO = dll
VENDORARCHEXP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\vendor\lib
VENDORLIBEXP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\vendor\lib


# --- MakeMaker constants section:

# Get dmake to read long commands like PM_TO_BLIB
MAXLINELENGTH = 800000

AR_STATIC_ARGS = cr
DIRFILESEP = \\
DFSEP = $(DIRFILESEP)
NAME = Wx
NAME_SYM = Wx
VERSION = 0.9927
VERSION_MACRO = VERSION
VERSION_SYM = 0_9927
DEFINE_VERSION = -D$(VERSION_MACRO)=\"$(VERSION)\"
XS_VERSION = 0.9927
XS_VERSION_MACRO = XS_VERSION
XS_DEFINE_VERSION = -D$(XS_VERSION_MACRO)=\"$(XS_VERSION)\"
INST_ARCHLIB = blib\arch
INST_SCRIPT = blib\script
INST_BIN = blib\bin
INST_LIB = blib\lib
INST_MAN1DIR = blib\man1
INST_MAN3DIR = blib\man3
MAN1EXT = 1
MAN3EXT = 3
INSTALLDIRS = site
DESTDIR = 
PREFIX = $(SITEPREFIX)
PERLPREFIX = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl
SITEPREFIX = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site
VENDORPREFIX = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\vendor
INSTALLPRIVLIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib
DESTINSTALLPRIVLIB = $(DESTDIR)$(INSTALLPRIVLIB)
INSTALLSITELIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib
DESTINSTALLSITELIB = $(DESTDIR)$(INSTALLSITELIB)
INSTALLVENDORLIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\vendor\lib
DESTINSTALLVENDORLIB = $(DESTDIR)$(INSTALLVENDORLIB)
INSTALLARCHLIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib
DESTINSTALLARCHLIB = $(DESTDIR)$(INSTALLARCHLIB)
INSTALLSITEARCH = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib
DESTINSTALLSITEARCH = $(DESTDIR)$(INSTALLSITEARCH)
INSTALLVENDORARCH = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\vendor\lib
DESTINSTALLVENDORARCH = $(DESTDIR)$(INSTALLVENDORARCH)
INSTALLBIN = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin
DESTINSTALLBIN = $(DESTDIR)$(INSTALLBIN)
INSTALLSITEBIN = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\bin
DESTINSTALLSITEBIN = $(DESTDIR)$(INSTALLSITEBIN)
INSTALLVENDORBIN = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin
DESTINSTALLVENDORBIN = $(DESTDIR)$(INSTALLVENDORBIN)
INSTALLSCRIPT = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin
DESTINSTALLSCRIPT = $(DESTDIR)$(INSTALLSCRIPT)
INSTALLSITESCRIPT = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\bin
DESTINSTALLSITESCRIPT = $(DESTDIR)$(INSTALLSITESCRIPT)
INSTALLVENDORSCRIPT = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin
DESTINSTALLVENDORSCRIPT = $(DESTDIR)$(INSTALLVENDORSCRIPT)
INSTALLMAN1DIR = none
DESTINSTALLMAN1DIR = $(DESTDIR)$(INSTALLMAN1DIR)
INSTALLSITEMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLSITEMAN1DIR = $(DESTDIR)$(INSTALLSITEMAN1DIR)
INSTALLVENDORMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLVENDORMAN1DIR = $(DESTDIR)$(INSTALLVENDORMAN1DIR)
INSTALLMAN3DIR = none
DESTINSTALLMAN3DIR = $(DESTDIR)$(INSTALLMAN3DIR)
INSTALLSITEMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLSITEMAN3DIR = $(DESTDIR)$(INSTALLSITEMAN3DIR)
INSTALLVENDORMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLVENDORMAN3DIR = $(DESTDIR)$(INSTALLVENDORMAN3DIR)
PERL_LIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib
PERL_ARCHLIB = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib
PERL_ARCHLIBDEP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib
LIBPERL_A = libperl.a
FIRST_MAKEFILE = Makefile
MAKEFILE_OLD = Makefile.old
MAKE_APERL_FILE = Makefile.aperl
PERLMAINCC = $(CC)
PERL_INC = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\CORE
PERL_INCDEP = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\CORE
PERL = "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin\perl.exe"
FULLPERL = "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin\perl.exe"
ABSPERL = $(PERL)
PERLRUN = $(PERL)
FULLPERLRUN = $(FULLPERL)
ABSPERLRUN = $(ABSPERL)
PERLRUNINST = $(PERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
FULLPERLRUNINST = $(FULLPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
ABSPERLRUNINST = $(ABSPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
PERL_CORE = 0
PERM_DIR = 755
PERM_RW = 644
PERM_RWX = 755

MAKEMAKER   = C:/Users/TOSH/Documents/GitHub/dwimperl-windows/strawberry-perl-5.20.0.1-32bit-portable/perl/site/lib/ExtUtils/MakeMaker.pm
MM_VERSION  = 7.1
MM_REVISION = 71000

# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).
# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)
# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)
# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.
MAKE = dmake
FULLEXT = Wx
BASEEXT = Wx
PARENT_NAME = 
DLBASE = $(BASEEXT)
VERSION_FROM = Wx.pm
INC = -I. -I. -IC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib -IC:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\include
DEFINE = -DHAVE_W32API_H -D__WXMSW__ -DNDEBUG -D_UNICODE -DWXUSINGDLL -DNOPCH -DNO_GCC_PRAGMA  
OBJECT = Wx$(OBJ_EXT) Constant$(OBJ_EXT) Controls$(OBJ_EXT) Event$(OBJ_EXT) Frames$(OBJ_EXT) GDI$(OBJ_EXT) Window$(OBJ_EXT) 
LDFROM = $(OBJECT) Wx_res.o 
LINKTYPE = dynamic
BOOTDEP = 

# Handy lists of source code files:
XS_FILES = Constant.xs \
	Controls.xs \
	Event.xs \
	Frames.xs \
	GDI.xs \
	Window.xs \
	Wx.xs
C_FILES  = Constant.c \
	Controls.c \
	Event.c \
	Frames.c \
	GDI.c \
	Window.c \
	Wx.c
O_FILES  = Constant.o \
	Controls.o \
	Event.o \
	Frames.o \
	GDI.o \
	Window.o \
	Wx.o
H_FILES  = 
MAN1PODS = 
MAN3PODS = 

# Where is the Config information that we are using/depend on
CONFIGDEP = $(PERL_ARCHLIBDEP)$(DFSEP)Config.pm $(PERL_INCDEP)$(DFSEP)config.h

# Where to build things
INST_LIBDIR      = $(INST_LIB)
INST_ARCHLIBDIR  = $(INST_ARCHLIB)

INST_AUTODIR     = $(INST_LIB)\auto\$(FULLEXT)
INST_ARCHAUTODIR = $(INST_ARCHLIB)\auto\$(FULLEXT)

INST_STATIC      = $(INST_ARCHAUTODIR)\$(BASEEXT)$(LIB_EXT)
INST_DYNAMIC     = $(INST_ARCHAUTODIR)\$(DLBASE).$(DLEXT)
INST_BOOT        = $(INST_ARCHAUTODIR)\$(BASEEXT).bs

# Extra linker info
EXPORT_LIST        = $(BASEEXT).def
PERL_ARCHIVE       = $(PERL_INC)\libperl520.a
PERL_ARCHIVEDEP    = $(PERL_INCDEP)\libperl520.a
PERL_ARCHIVE_AFTER = 


TO_INST_PM = Wx.pm \
	build/Wx/Overload/Driver.pm \
	build/Wx/Overload/Handle.pm \
	build/Wx/XSP/Enum.pm \
	build/Wx/XSP/Event.pm \
	build/Wx/XSP/Overload.pm \
	build/Wx/XSP/Virtual.pm \
	build/Wx/build/MakeMaker.pm \
	build/Wx/build/MakeMaker/Any_OS.pm \
	build/Wx/build/MakeMaker/Any_wx_config.pm \
	build/Wx/build/MakeMaker/Core.pm \
	build/Wx/build/MakeMaker/Hacks.pm \
	build/Wx/build/MakeMaker/MacOSX_GCC.pm \
	build/Wx/build/MakeMaker/Win32.pm \
	build/Wx/build/MakeMaker/Win32_MSVC.pm \
	build/Wx/build/MakeMaker/Win32_MinGW.pm \
	build/Wx/build/Options.pm \
	build/Wx/build/Utils.pm \
	lib/Wx/Api.pod \
	lib/Wx/App.pm \
	lib/Wx/ArtProvider.pm \
	lib/Wx/Event.pm \
	lib/Wx/Loader.pod \
	lib/Wx/Locale.pm \
	lib/Wx/Menu.pm \
	lib/Wx/Mini.pm \
	lib/Wx/NewClass.pod \
	lib/Wx/RadioBox.pm \
	lib/Wx/Thread.pod \
	lib/Wx/Timer.pm

PM_TO_BLIB = Wx.pm \
	$(INST_LIB)\Wx.pm \
	build/Wx/Overload/Driver.pm \
	$(INST_LIB)\Wx\Overload\Driver.pm \
	build/Wx/Overload/Handle.pm \
	$(INST_LIB)\Wx\Overload\Handle.pm \
	build/Wx/XSP/Enum.pm \
	$(INST_LIB)\Wx\XSP\Enum.pm \
	build/Wx/XSP/Event.pm \
	$(INST_LIB)\Wx\XSP\Event.pm \
	build/Wx/XSP/Overload.pm \
	$(INST_LIB)\Wx\XSP\Overload.pm \
	build/Wx/XSP/Virtual.pm \
	$(INST_LIB)\Wx\XSP\Virtual.pm \
	build/Wx/build/MakeMaker.pm \
	$(INST_LIB)\Wx\build\MakeMaker.pm \
	build/Wx/build/MakeMaker/Any_OS.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Any_OS.pm \
	build/Wx/build/MakeMaker/Any_wx_config.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Any_wx_config.pm \
	build/Wx/build/MakeMaker/Core.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Core.pm \
	build/Wx/build/MakeMaker/Hacks.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Hacks.pm \
	build/Wx/build/MakeMaker/MacOSX_GCC.pm \
	$(INST_LIB)\Wx\build\MakeMaker\MacOSX_GCC.pm \
	build/Wx/build/MakeMaker/Win32.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Win32.pm \
	build/Wx/build/MakeMaker/Win32_MSVC.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Win32_MSVC.pm \
	build/Wx/build/MakeMaker/Win32_MinGW.pm \
	$(INST_LIB)\Wx\build\MakeMaker\Win32_MinGW.pm \
	build/Wx/build/Options.pm \
	$(INST_LIB)\Wx\build\Options.pm \
	build/Wx/build/Utils.pm \
	$(INST_LIB)\Wx\build\Utils.pm \
	lib/Wx/Api.pod \
	blib\lib\Wx\Api.pod \
	lib/Wx/App.pm \
	blib\lib\Wx\App.pm \
	lib/Wx/ArtProvider.pm \
	blib\lib\Wx\ArtProvider.pm \
	lib/Wx/Event.pm \
	blib\lib\Wx\Event.pm \
	lib/Wx/Loader.pod \
	blib\lib\Wx\Loader.pod \
	lib/Wx/Locale.pm \
	blib\lib\Wx\Locale.pm \
	lib/Wx/Menu.pm \
	blib\lib\Wx\Menu.pm \
	lib/Wx/Mini.pm \
	blib\lib\Wx\Mini.pm \
	lib/Wx/NewClass.pod \
	blib\lib\Wx\NewClass.pod \
	lib/Wx/RadioBox.pm \
	blib\lib\Wx\RadioBox.pm \
	lib/Wx/Thread.pod \
	blib\lib\Wx\Thread.pod \
	lib/Wx/Timer.pm \
	blib\lib\Wx\Timer.pm


# --- MakeMaker platform_constants section:
MM_Win32_VERSION = 7.10


# --- MakeMaker tool_autosplit section:
# Usage: $(AUTOSPLITFILE) FileToSplit AutoDirToSplitInto
AUTOSPLITFILE = $(ABSPERLRUN)  -e "use AutoSplit;  autosplit($$$$ARGV[0], $$$$ARGV[1], 0, 1, 1)" --



# --- MakeMaker tool_xsubpp section:

XSUBPPDIR = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\ExtUtils
XSUBPP = "$(XSUBPPDIR)$(DFSEP)xsubpp"
XSUBPPRUN = $(PERLRUN) $(XSUBPP)
XSPROTOARG = 
XSUBPPDEPS = C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\ExtUtils\typemap typemap C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\ExtUtils$(DFSEP)xsubpp
XSUBPPARGS =  -nolinenumbers -noprototypes  -typemap "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\lib\ExtUtils\typemap" -typemap "typemap"
XSUBPP_EXTRA_ARGS =


# --- MakeMaker tools_other section:
CHMOD = $(ABSPERLRUN) -MExtUtils::Command -e chmod --
CP = $(ABSPERLRUN) -MExtUtils::Command -e cp --
MV = $(ABSPERLRUN) -MExtUtils::Command -e mv --
NOOP = rem
NOECHO = @
RM_F = $(ABSPERLRUN) -MExtUtils::Command -e rm_f --
RM_RF = $(ABSPERLRUN) -MExtUtils::Command -e rm_rf --
TEST_F = $(ABSPERLRUN) -MExtUtils::Command -e test_f --
TOUCH = $(ABSPERLRUN) -MExtUtils::Command -e touch --
UMASK_NULL = umask 0
DEV_NULL = > NUL
MKPATH = $(ABSPERLRUN) -MExtUtils::Command -e mkpath --
EQUALIZE_TIMESTAMP = $(ABSPERLRUN) -MExtUtils::Command -e eqtime --
FALSE = $(ABSPERLRUN)  -e "exit 1" --
TRUE = $(ABSPERLRUN)  -e "exit 0" --
ECHO = $(ABSPERLRUN) -l -e "binmode STDOUT, qq{{:raw}}; print qq{{@ARGV}}" --
ECHO_N = $(ABSPERLRUN)  -e "print qq{{@ARGV}}" --
UNINST = 0
VERBINST = 0
MOD_INSTALL = $(ABSPERLRUN) -MExtUtils::Install -e "install([ from_to => {{@ARGV}}, verbose => '$(VERBINST)', uninstall_shadows => '$(UNINST)', dir_mode => '$(PERM_DIR)' ]);" --
DOC_INSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e perllocal_install --
UNINSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e uninstall --
WARN_IF_OLD_PACKLIST = $(ABSPERLRUN) -MExtUtils::Command::MM -e warn_if_old_packlist --
MACROSTART = 
MACROEND = 
USEMAKEFILE = -f
FIXIN = pl2bat.bat
CP_NONEMPTY = $(ABSPERLRUN) -MExtUtils::Command::MM -e cp_nonempty --


# --- MakeMaker makemakerdflt section:
makemakerdflt : all
	$(NOECHO) $(NOOP)


# --- MakeMaker dist section:
TAR = tar
TARFLAGS = cvf
ZIP = zip
ZIPFLAGS = -r
COMPRESS = gzip --best
SUFFIX = .gz
SHAR = shar
PREOP = $(NOECHO) $(NOOP)
POSTOP = $(NOECHO) $(NOOP)
TO_UNIX = $(NOECHO) $(NOOP)
CI = ci -u
RCS_LABEL = rcs -Nv$(VERSION_SYM): -q
DIST_CP = best
DIST_DEFAULT = tardist
DISTNAME = Wx
DISTVNAME = Wx-0.9927


# --- MakeMaker macro section:


# --- MakeMaker depend section:
pm_to_blib :  wxt_copy_files
Wx.o :  Wx.c cpp\app.h cpp\array_helpers.h cpp\chkconfig.h cpp\compat.h cpp\e_cback.h cpp\helpers.cpp cpp\helpers.h cpp\log.h cpp\overload.cpp cpp\overload.h cpp\ovl_const.cpp cpp\ovl_const.h cpp\process.h cpp\setup.h cpp\streams.cpp cpp\streams.h cpp\timer.h cpp\tipprovider.h cpp\v_cback.cpp cpp\v_cback.h cpp\v_cback_def.h cpp\wxapi.h
wxt_fix_alien :  pm_to_blib
wxt_copy_files :  cpp/setup.h cpp/wxapi.h Opt typemap cpp/overload.h cpp/event.h cpp/v_cback_def.h cpp/v_cback.h cpp/helpers.h cpp/e_cback.h cpp/constants.h cpp/compat.h cpp/chkconfig.h cpp/streams.h
Controls.c :  Controls.xs XS\AnimationCtrl.xsp XS\BitmapComboBox.xsp XS\BookCtrl.xsp XS\CheckBox.xs XS\CheckListBox.xs XS\Choice.xs XS\Choicebook.xsp XS\CollapsiblePane.xsp XS\ColourPickerCtrl.xsp XS\ComboBox.xs XS\ComboCtrl.xsp XS\ComboPopup.xsp XS\ControlWithItems.xsp XS\DirCtrl.xsp XS\EditableListBox.xsp XS\FileCtrl.xsp XS\FilePickerCtrl.xsp XS\FontPickerCtrl.xsp XS\Gauge.xs XS\HyperlinkCtrl.xsp XS\ItemContainer.xs XS\ItemContainerImmutable.xs XS\ListBox.xs XS\ListCtrl.xs XS\Listbook.xsp XS\Notebook.xs XS\OwnerDrawnComboBox.xsp XS\PickerCtrl.xsp XS\RadioBox.xs XS\RadioButton.xs XS\ScrollBar.xs XS\SearchCtrl.xsp XS\Slider.xs XS\SpinButton.xs XS\SpinCtrl.xs XS\StaticBitmap.xs XS\StaticBox.xs XS\StaticLine.xs XS\StaticText.xs XS\TextAttr.xsp XS\TextCtrl.xsp XS\TextCtrlIface.xsp XS\ToggleButton.xs XS\Toolbook.xsp XS\TreeCtrl.xs XS\Treebook.xsp XS\VListBox.xsp interface\wx\bannerwindow.h interface\wx\bmpbuttn.h interface\wx\button.h interface\wx\commandlinkbutton.h interface\wx\generic\spinctrg.h interface\wx\headercol.h interface\wx\headerctrl.h interface\wx\infobar.h interface\wx\rearrangectrl.h interface\wx\richtooltip.h interface\wx\treelist.h
GDI.o :  GDI.c cpp\chkconfig.h cpp\compat.h cpp\helpers.h cpp\overload.h cpp\ovl_const.h cpp\setup.h cpp\streams.h cpp\wxapi.h wxpl.xpm
Window.c :  Window.xs XS\Accelerators.xs XS\Constraint.xs XS\GridBagSizer.xsp XS\PlWindow.xsp XS\SashWindow.xs XS\ScrolledWindow.xs XS\Sizer.xsp XS\SplitterWindow.xsp XS\VScrolledWindow.xsp XS\Validators.xs XS\VarHScrollHelper.xs XS\VarHVScrollHelper.xs XS\VarScrollHelperBase.xs XS\VarVScrollHelper.xs XS\Window.xsp
Wx_res.o : Wx.rc 
cpp\ovl_const.h :  cpp\ovl_const.cpp
Frames.o :  Frames.c cpp\chkconfig.h cpp\compat.h cpp\dialog.h cpp\frame.h cpp\helpers.h cpp\overload.h cpp\ovl_const.h cpp\panel.h cpp\setup.h cpp\singlechoicedialog.h cpp\v_cback.h cpp\v_cback_def.h cpp\wizard.h cpp\wxapi.h
GDI.c :  GDI.xs XS\Animation.xsp XS\Bitmap.xs XS\Brush.xsp XS\Colour.xs XS\ColourDatabase.xs XS\Cursor.xs XS\DC.xsp XS\Font.xs XS\GraphicsContext.xs XS\GraphicsMatrix.xs XS\GraphicsObject.xs XS\GraphicsPath.xs XS\GraphicsRenderer.xsp XS\Icon.xs XS\Image.xs XS\ImageList.xsp XS\Overlay.xs XS\Palette.xs XS\Pen.xs XS\SVGFileDC.xsp
Constant.c :  Constant.xs 
Event.o :  Event.c cpp\chkconfig.h cpp\compat.h cpp\e_cback.cpp cpp\e_cback.h cpp\event.h cpp\helpers.h cpp\setup.h cpp\v_cback.h cpp\v_cback_def.h cpp\wxapi.h
Controls.o :  Controls.c cpp\chkconfig.h cpp\compat.h cpp\constants.h cpp\controls.cpp cpp\controls.h cpp\helpers.h cpp\overload.h cpp\ovl_const.h cpp\setup.h cpp\v_cback.h cpp\v_cback_def.h cpp\wxapi.h
Event.c :  Event.xs XS\EvtHandler.xs
cpp\ovl_const.cpp :  wxt_overload
Frames.c :  Frames.xs XS\AboutDialog.xsp XS\ColourDialog.xs XS\Dialog.xsp XS\DirDialog.xs XS\FileDialog.xs XS\FindReplaceDialog.xsp XS\FontDialog.xs XS\Frame.xs XS\IconBundle.xsp XS\MessageDialog.xsp XS\MultiChoiceDialog.xs XS\Panel.xs XS\PopupWindow.xsp XS\ProgressDialog.xs XS\PropertySheetDialog.xsp XS\SingleChoiceDialog.xs XS\StatusBar.xs XS\TextEntryDialog.xs XS\ToolBar.xs XS\TopLevelWindow.xsp XS\Wizard.xs
Constant.o :  Constant.c cpp\chkconfig.h cpp\compat.h cpp\constants.h cpp\helpers.h cpp\setup.h cpp\wxapi.h
Window.o :  Window.c cpp\chkconfig.h cpp\compat.h cpp\helpers.h cpp\overload.h cpp\ovl_const.h cpp\scrolledwindow.h cpp\setup.h cpp\sizer.h cpp\v_cback.h cpp\v_cback_def.h cpp\validators.h cpp\window.h cpp\wxapi.h cpp\wxsizer.h
blibdirs :  wxt_copy_files
blibdirs.ts :  wxt_copy_files
Wx.c :  Wx.xs XS\App.xs XS\ArtProvider.xsp XS\Caret.xs XS\ClassInfo.xsp XS\Config.xs XS\Display.xsp XS\EventFilter.xsp XS\FontEnumerator.xsp XS\FontMapper.xs XS\Geom.xs XS\Locale.xs XS\Log.xs XS\Menu.xs XS\MimeTypes.xsp XS\NotificationMessage.xsp XS\Power.xsp XS\Process.xs XS\Sound.xsp XS\StandardPaths.xsp XS\Stream.xs XS\TaskBarIcon.xs XS\Timer.xs XS\ToolTip.xs XS\Utils.xs XS\Variant.xsp XS\Wave.xs interface\wx\uiaction.h
blib\lib\Wx\Wx_Exp.pm :  ./Constant.xs ./build/Wx/XSP/Enum.pm ./build/Wx/XSP/Event.pm ./cpp/controls.cpp ./ext/aui/AUI.xs ./ext/aui/XS/AuiManager.xsp ./ext/calendar/Calendar.pm ./ext/calendar/XS/CalendarCtrl.xsp ./ext/calendar/XS/DatePickerCtrl.xsp ./ext/calendar/XS/TimePickerCtrl.xsp ./ext/dataview/DataView.xs ./ext/dataview/XS/DataViewCtrl.xsp ./ext/dnd/cpp/dn_constants.cpp ./ext/dnd/lib/Wx/DND.pm ./ext/docview/cpp/dv_constants.cpp ./ext/filesys/FS.xs ./ext/grid/Grid.xs ./ext/grid/cpp/gr_constants.cpp ./ext/html/Html.xs ./ext/html/cpp/ht_constants.cpp ./ext/ipc/XS/IPC.xsp ./ext/media/cpp/me_constants.cpp ./ext/media/lib/Wx/Media.pm ./ext/print/cpp/pr_constants.cpp ./ext/propgrid/cpp/propgrid_constants.cpp ./ext/propgrid/XS/PGProperty.xsp ./ext/ribbon/cpp/ribbon_constants.cpp ./ext/ribbon/XS/RibbonArtProvider.xsp ./ext/richtext/RichText.xs ./ext/richtext/lib/Wx/RichText.pm ./ext/richtext/XS/RichTextCtrl.xsp ./ext/socket/cpp/sk_constants.cpp ./ext/stc/cpp/st_constants.cpp ./ext/stc/lib/Wx/STC.pm ./ext/webview/XS/WebViewV2.xsp ./ext/webview/XS/WebViewV3.xsp ./ext/xrc/cpp/xr_constants.cpp ./interface/wx/headercol.h ./interface/wx/headerctrl.h ./interface/wx/richtooltip.h ./interface/wx/treelist.h ./lib/Wx/Event.pm


# --- MakeMaker cflags section:

CCFLAGS = -s -O2 -DWIN32 -DPERL_TEXTMODE_SCRIPTS -DPERL_IMPLICIT_CONTEXT -DPERL_IMPLICIT_SYS -DUSE_PERLIO -fwrapv -fno-strict-aliasing -mms-bitfields
OPTIMIZE = -s -O2
PERLTYPE = 


# --- MakeMaker const_loadlibs section:

# Wx might depend on some other libraries:
# See ExtUtils::Liblist for details
#
EXTRALIBS = "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_core.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxbase30u.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_adv.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_core.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxbase30u.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libmoldname.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libkernel32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libuser32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libgdi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libwinspool.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libcomdlg32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libadvapi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libshell32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libole32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\liboleaut32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libnetapi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libuuid.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libws2_32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libmpr.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libwinmm.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libversion.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libodbc32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libodbccp32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libcomctl32.a"
LDLOADLIBS = "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_core.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxbase30u.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_adv.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxmsw30u_core.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\lib\libwxbase30u.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libmoldname.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libkernel32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libuser32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libgdi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libwinspool.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libcomdlg32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libadvapi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libshell32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libole32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\liboleaut32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libnetapi32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libuuid.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libws2_32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libmpr.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libwinmm.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libversion.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libodbc32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libodbccp32.a" "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\c\i686-w64-mingw32\lib\libcomctl32.a"
BSLOADLIBS = 


# --- MakeMaker const_cccmd section:
CCCMD = $(CC) -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION)

# --- MakeMaker post_constants section:


# --- MakeMaker pasthru section:
PASTHRU = 

# --- MakeMaker special_targets section:
.SUFFIXES : .xs .c .C .cpp .i .s .cxx .cc $(OBJ_EXT)

.PHONY: all config static dynamic test linkext manifest blibdirs clean realclean disttest distdir

.USESHELL :


# --- MakeMaker c_o section:

.c.i:
	gcc -E -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c > $*.i

.c.s:
	$(CCCMD) -S $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c

.c$(OBJ_EXT):
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c

.cpp$(OBJ_EXT):
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cpp

.cxx$(OBJ_EXT):
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cxx

.cc$(OBJ_EXT):
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cc


# --- MakeMaker xs_c section:

.xs.c:
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(XSUBPP_EXTRA_ARGS) $*.xs > $*.xsc && $(MV) $*.xsc $*.c


# --- MakeMaker xs_o section:


# --- MakeMaker top_targets section:
all :: pure_all
	$(NOECHO) $(NOOP)


pure_all :: config pm_to_blib subdirs linkext
	$(NOECHO) $(NOOP)

subdirs :: $(MYEXTLIB)
	$(NOECHO) $(NOOP)

config :: $(FIRST_MAKEFILE) blibdirs
	$(NOECHO) $(NOOP)

help :
	perldoc ExtUtils::MakeMaker


# --- MakeMaker blibdirs section:
blibdirs : $(INST_LIBDIR)$(DFSEP).exists $(INST_ARCHLIB)$(DFSEP).exists $(INST_AUTODIR)$(DFSEP).exists $(INST_ARCHAUTODIR)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists $(INST_SCRIPT)$(DFSEP).exists $(INST_MAN1DIR)$(DFSEP).exists $(INST_MAN3DIR)$(DFSEP).exists
	$(NOECHO) $(NOOP)

# Backwards compat with 6.18 through 6.25
blibdirs.ts : blibdirs
	$(NOECHO) $(NOOP)

$(INST_LIBDIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_LIBDIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_LIBDIR)
	$(NOECHO) $(TOUCH) $(INST_LIBDIR)$(DFSEP).exists

$(INST_ARCHLIB)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHLIB)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHLIB)
	$(NOECHO) $(TOUCH) $(INST_ARCHLIB)$(DFSEP).exists

$(INST_AUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_AUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_AUTODIR)
	$(NOECHO) $(TOUCH) $(INST_AUTODIR)$(DFSEP).exists

$(INST_ARCHAUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHAUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHAUTODIR)
	$(NOECHO) $(TOUCH) $(INST_ARCHAUTODIR)$(DFSEP).exists

$(INST_BIN)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_BIN)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_BIN)
	$(NOECHO) $(TOUCH) $(INST_BIN)$(DFSEP).exists

$(INST_SCRIPT)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_SCRIPT)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_SCRIPT)
	$(NOECHO) $(TOUCH) $(INST_SCRIPT)$(DFSEP).exists

$(INST_MAN1DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN1DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN1DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN1DIR)$(DFSEP).exists

$(INST_MAN3DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN3DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN3DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN3DIR)$(DFSEP).exists



# --- MakeMaker linkext section:

linkext :: $(LINKTYPE)
	$(NOECHO) $(NOOP)


# --- MakeMaker dlsyms section:

Wx.def: Makefile.PL
	$(PERLRUN) -MExtUtils::Mksymlists \
     -e "Mksymlists('NAME'=>\"Wx\", 'DLBASE' => '$(BASEEXT)', 'DL_FUNCS' => {  }, 'FUNCLIST' => [], 'IMPORTS' => {  }, 'DL_VARS' => []);"


# --- MakeMaker dynamic_bs section:
BOOTSTRAP = $(BASEEXT).bs

# As Mkbootstrap might not write a file (if none is required)
# we use touch to prevent make continually trying to remake it.
# The DynaLoader only reads a non-empty file.
$(BOOTSTRAP) : $(FIRST_MAKEFILE) $(BOOTDEP) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(NOECHO) $(ECHO) "Running Mkbootstrap for $(NAME) ($(BSLOADLIBS))"
	$(NOECHO) $(PERLRUN) \
		"-MExtUtils::Mkbootstrap" \
		-e "Mkbootstrap('$(BASEEXT)','$(BSLOADLIBS)');"
	$(NOECHO) $(TOUCH) "$@"
	$(CHMOD) $(PERM_RW) "$@"


# --- MakeMaker dynamic section:

dynamic :: $(FIRST_MAKEFILE) $(BOOTSTRAP) $(INST_DYNAMIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker dynamic_lib section:

# This section creates the dynamically loadable $(INST_DYNAMIC)
# from $(OBJECT) and possibly $(MYEXTLIB).
OTHERLDFLAGS = 
INST_DYNAMIC_DEP =  Wx_res.o

$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(BOOTSTRAP) $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVEDEP) $(INST_DYNAMIC_DEP)
	g++ -shared -m32  -s  -o $@ $(LDFROM) $(MYEXTLIB) $(PERL_ARCHIVE) $(LDLOADLIBS) $(BASEEXT).def
	$(CHMOD) $(PERM_RWX) $@


# --- MakeMaker static section:

## $(INST_PM) has been moved to the all: target.
## It remains here for awhile to allow for old usage: "make static"
static :: $(FIRST_MAKEFILE) $(INST_STATIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker static_lib section:
$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(RM_RF) $@
	$(AR) -ru $@ $(OBJECT)
	$(CHMOD) $(PERM_RWX) $@
	$(NOECHO) $(ECHO) "$(EXTRALIBS)" > $(INST_ARCHAUTODIR)\extralibs.ld


# --- MakeMaker manifypods section:

POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
POD2MAN = $(POD2MAN_EXE)


manifypods : pure_all 
	$(NOECHO) $(NOOP)




# --- MakeMaker processPL section:


# --- MakeMaker installbin section:

EXE_FILES = script/wxperl_overload

pure_all :: $(INST_SCRIPT)\wxperl_overload
	$(NOECHO) $(NOOP)

realclean ::
	$(RM_F) \
	  $(INST_SCRIPT)\wxperl_overload 

$(INST_SCRIPT)\wxperl_overload : script/wxperl_overload $(FIRST_MAKEFILE) $(INST_SCRIPT)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists
	$(NOECHO) $(RM_F) $(INST_SCRIPT)\wxperl_overload
	$(CP) script/wxperl_overload $(INST_SCRIPT)\wxperl_overload
	$(FIXIN) $(INST_SCRIPT)\wxperl_overload
	-$(NOECHO) $(CHMOD) $(PERM_RWX) $(INST_SCRIPT)\wxperl_overload



# --- MakeMaker subdirs section:
subdirs :: wxt_overload


# The default clean, realclean and test targets in this Makefile
# have automatically been given entries for each subdir.


subdirs ::
	$(NOECHO) cd ext && $(MAKE) $(USEMAKEFILE) $(FIRST_MAKEFILE) all $(PASTHRU)


# --- MakeMaker clean_subdirs section:
clean_subdirs :
	$(ABSPERLRUN)  -e "exit 0 unless chdir 'ext';  system '$(MAKE) clean' if -f '$(FIRST_MAKEFILE)';" --


# --- MakeMaker clean section:

# Delete temporary files but do not touch installed files. We don't delete
# the Makefile here so a later make realclean still has a makefile to use.

clean :: clean_subdirs
	- $(RM_F) \
	  $(BASEEXT).bso $(BASEEXT).def \
	  $(BASEEXT).exp $(BASEEXT).x \
	  $(BOOTSTRAP) $(INST_ARCHAUTODIR)\extralibs.all \
	  $(INST_ARCHAUTODIR)\extralibs.ld $(MAKE_APERL_FILE) \
	  *$(LIB_EXT) *$(OBJ_EXT) \
	  *perl.core Constant.c \
	  Controls.c Event.c \
	  Frames.c GDI.c \
	  MYMETA.json MYMETA.yml \
	  Window.c Wx.c \
	  blibdirs.ts core \
	  core.*perl.*.? core.[0-9] \
	  core.[0-9][0-9] core.[0-9][0-9][0-9] \
	  core.[0-9][0-9][0-9][0-9] core.[0-9][0-9][0-9][0-9][0-9] \
	  lib$(BASEEXT).def mon.out \
	  perl perl$(EXE_EXT) \
	  perl.exe perlmain.c \
	  pm_to_blib pm_to_blib.ts \
	  so_locations tmon.out 
	- $(RM_RF) \
	  Opt Wx_def.old \
	  Wx_res.o XS/ItemContainer.xs \
	  XS/ItemContainerImmutable.xs XS/VarHScrollHelper.xs \
	  XS/VarHVScrollHelper.xs XS/VarScrollHelperBase.xs \
	  XS/VarVScrollHelper.xs blib \
	  cpp/setup.h cpp/v_cback_def.h \
	  cpp\ovl_const.cpp cpp\ovl_const.h \
	  dll.base dll.exp \
	  files.lst overload.lst \
	  wxt_* xspp 
	  $(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)


# --- MakeMaker realclean_subdirs section:
realclean_subdirs :
	- $(ABSPERLRUN)  -e "chdir 'ext';  system '$(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) realclean' if -f '$(MAKEFILE_OLD)';" --
	- $(ABSPERLRUN)  -e "chdir 'ext';  system '$(MAKE) $(USEMAKEFILE) $(FIRST_MAKEFILE) realclean' if -f '$(FIRST_MAKEFILE)';" --


# --- MakeMaker realclean section:
# Delete temporary files (via clean) and also delete dist files
realclean purge ::  clean realclean_subdirs
	- $(RM_F) \
	  $(FIRST_MAKEFILE) $(OBJECT) \
	  $(MAKEFILE_OLD) 
	- $(RM_RF) \
	  $(DISTVNAME) 


# --- MakeMaker metafile section:
metafile : create_distdir
	$(NOECHO) $(ECHO) Generating META.yml
	$(NOECHO) $(ECHO) --- > META_new.yml
	$(NOECHO) $(ECHO) "abstract: 'interface to the wxWidgets cross-platform GUI toolkit'" >> META_new.yml
	$(NOECHO) $(ECHO) author: >> META_new.yml
	$(NOECHO) $(ECHO) "  - 'Mattia Barbon <mbarbon@cpan.org>'" >> META_new.yml
	$(NOECHO) $(ECHO) build_requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  Alien::wxWidgets: '0.25'" >> META_new.yml
	$(NOECHO) $(ECHO) "  ExtUtils::MakeMaker: '6.48'" >> META_new.yml
	$(NOECHO) $(ECHO) "  ExtUtils::ParseXS: '3.15'" >> META_new.yml
	$(NOECHO) $(ECHO) "  ExtUtils::XSpp: '0.1602'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Spec::Functions: '0.82'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::Harness: '2.26'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::More: '0.45'" >> META_new.yml
	$(NOECHO) $(ECHO) "  if: '0.03'" >> META_new.yml
	$(NOECHO) $(ECHO) configure_requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  Alien::wxWidgets: '0.25'" >> META_new.yml
	$(NOECHO) $(ECHO) "dynamic_config: 1" >> META_new.yml
	$(NOECHO) $(ECHO) "generated_by: 'ExtUtils::MakeMaker version 7.1, CPAN::Meta::Converter version 2.141170'" >> META_new.yml
	$(NOECHO) $(ECHO) "license: perl" >> META_new.yml
	$(NOECHO) $(ECHO) meta-spec: >> META_new.yml
	$(NOECHO) $(ECHO) "  url: http://module-build.sourceforge.net/META-spec-v1.4.html" >> META_new.yml
	$(NOECHO) $(ECHO) "  version: '1.4'" >> META_new.yml
	$(NOECHO) $(ECHO) "name: Wx" >> META_new.yml
	$(NOECHO) $(ECHO) no_index: >> META_new.yml
	$(NOECHO) $(ECHO) "  directory:" >> META_new.yml
	$(NOECHO) $(ECHO) "    - samples" >> META_new.yml
	$(NOECHO) $(ECHO) "    - script" >> META_new.yml
	$(NOECHO) $(ECHO) "  package:" >> META_new.yml
	$(NOECHO) $(ECHO) "    - MY" >> META_new.yml
	$(NOECHO) $(ECHO) "    - Parse::Yapp::Driver" >> META_new.yml
	$(NOECHO) $(ECHO) "    - Wx::DropTarget" >> META_new.yml
	$(NOECHO) $(ECHO) "    - Wx::Droptarget" >> META_new.yml
	$(NOECHO) $(ECHO) requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  Alien::wxWidgets: '0.25'" >> META_new.yml
	$(NOECHO) $(ECHO) resources: >> META_new.yml
	$(NOECHO) $(ECHO) "  MailingList: http://lists.perl.org/list/wxperl-users.html" >> META_new.yml
	$(NOECHO) $(ECHO) "  bugtracker: http://rt.cpan.org/NoAuth/Bugs.html?Dist=Wx" >> META_new.yml
	$(NOECHO) $(ECHO) "  homepage: http://www.wxperl.it/" >> META_new.yml
	$(NOECHO) $(ECHO) "  license: http://dev.perl.org/licenses/" >> META_new.yml
	$(NOECHO) $(ECHO) "  repository: http://svn.code.sf.net/p/wxperl/code/wxPerl" >> META_new.yml
	$(NOECHO) $(ECHO) "version: '0.9927'" >> META_new.yml
	-$(NOECHO) $(MV) META_new.yml $(DISTVNAME)/META.yml
	$(NOECHO) $(ECHO) Generating META.json
	$(NOECHO) $(ECHO) {{ > META_new.json
	$(NOECHO) $(ECHO) "   \"abstract\" : \"interface to the wxWidgets cross-platform GUI toolkit\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"author\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "      \"Mattia Barbon ^<mbarbon^@cpan.org^>\"" >> META_new.json
	$(NOECHO) $(ECHO) "   ]," >> META_new.json
	$(NOECHO) $(ECHO) "   \"dynamic_config\" : 1," >> META_new.json
	$(NOECHO) $(ECHO) "   \"generated_by\" : \"ExtUtils::MakeMaker version 7.1, CPAN::Meta::Converter version 2.141170\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"license\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "      \"perl_5\"" >> META_new.json
	$(NOECHO) $(ECHO) "   ]," >> META_new.json
	$(NOECHO) $(ECHO) "   \"meta-spec\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"url\" : \"http://search.cpan.org/perldoc?CPAN::Meta::Spec\"," >> META_new.json
	$(NOECHO) $(ECHO) "      \"version\" : \"2\"" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"name\" : \"Wx\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"no_index\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"directory\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "         \"samples\"," >> META_new.json
	$(NOECHO) $(ECHO) "         \"script\"" >> META_new.json
	$(NOECHO) $(ECHO) "      ]," >> META_new.json
	$(NOECHO) $(ECHO) "      \"package\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "         \"MY\"," >> META_new.json
	$(NOECHO) $(ECHO) "         \"Parse::Yapp::Driver\"," >> META_new.json
	$(NOECHO) $(ECHO) "         \"Wx::DropTarget\"," >> META_new.json
	$(NOECHO) $(ECHO) "         \"Wx::Droptarget\"" >> META_new.json
	$(NOECHO) $(ECHO) "      ]" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"prereqs\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"build\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"Alien::wxWidgets\" : \"0.25\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::MakeMaker\" : \"6.48\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::ParseXS\" : \"3.15\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::XSpp\" : \"0.1602\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Spec::Functions\" : \"0.82\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::Harness\" : \"2.26\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::More\" : \"0.45\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"if\" : \"0.03\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"configure\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"Alien::wxWidgets\" : \"0.25\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"runtime\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"Alien::wxWidgets\" : \"0.25\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"release_status\" : \"stable\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"resources\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"bugtracker\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"web\" : \"http://rt.cpan.org/NoAuth/Bugs.html?Dist=Wx\"" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"homepage\" : \"http://www.wxperl.it/\"," >> META_new.json
	$(NOECHO) $(ECHO) "      \"license\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "         \"http://dev.perl.org/licenses/\"" >> META_new.json
	$(NOECHO) $(ECHO) "      ]," >> META_new.json
	$(NOECHO) $(ECHO) "      \"repository\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"url\" : \"http://svn.code.sf.net/p/wxperl/code/wxPerl\"" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"x_MailingList\" : \"http://lists.perl.org/list/wxperl-users.html\"" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"version\" : \"0.9927\"" >> META_new.json
	$(NOECHO) $(ECHO) }} >> META_new.json
	-$(NOECHO) $(MV) META_new.json $(DISTVNAME)/META.json


# --- MakeMaker signature section:
signature :
	cpansign -s


# --- MakeMaker dist_basics section:
distclean :: realclean distcheck
	$(NOECHO) $(NOOP)

distcheck :
	$(PERLRUN) "-MExtUtils::Manifest=fullcheck" -e fullcheck

skipcheck :
	$(PERLRUN) "-MExtUtils::Manifest=skipcheck" -e skipcheck

manifest :
	$(PERLRUN) "-MExtUtils::Manifest=mkmanifest" -e mkmanifest

veryclean : realclean
	$(RM_F) *~ */*~ *.orig */*.orig *.bak */*.bak *.old */*.old



# --- MakeMaker dist_core section:

dist : $(DIST_DEFAULT) $(FIRST_MAKEFILE)
	$(NOECHO) $(ABSPERLRUN) -l -e "print 'Warning: Makefile possibly out of date with $(VERSION_FROM)'\
    if -e '$(VERSION_FROM)' and -M '$(VERSION_FROM)' < -M '$(FIRST_MAKEFILE)';" --

tardist : $(DISTVNAME).tar$(SUFFIX)
	$(NOECHO) $(NOOP)

uutardist : $(DISTVNAME).tar$(SUFFIX)
	uuencode $(DISTVNAME).tar$(SUFFIX) $(DISTVNAME).tar$(SUFFIX) > $(DISTVNAME).tar$(SUFFIX)_uu
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)_uu'

$(DISTVNAME).tar$(SUFFIX) : distdir
	$(PREOP)
	$(TO_UNIX)
	$(TAR) $(TARFLAGS) $(DISTVNAME).tar $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(COMPRESS) $(DISTVNAME).tar
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)'
	$(POSTOP)

zipdist : $(DISTVNAME).zip
	$(NOECHO) $(NOOP)

$(DISTVNAME).zip : distdir
	$(PREOP)
	$(ZIP) $(ZIPFLAGS) $(DISTVNAME).zip $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).zip'
	$(POSTOP)

shdist : distdir
	$(PREOP)
	$(SHAR) $(DISTVNAME) > $(DISTVNAME).shar
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).shar'
	$(POSTOP)


# --- MakeMaker distdir section:
create_distdir :
	$(RM_RF) $(DISTVNAME)
	$(PERLRUN) "-MExtUtils::Manifest=manicopy,maniread" \
		-e "manicopy(maniread(),'$(DISTVNAME)', '$(DIST_CP)');"

distdir : create_distdir distmeta 
	$(NOECHO) $(NOOP)



# --- MakeMaker dist_test section:
disttest : distdir
	cd $(DISTVNAME) && $(ABSPERLRUN) Makefile.PL 
	cd $(DISTVNAME) && $(MAKE) $(PASTHRU)
	cd $(DISTVNAME) && $(MAKE) test $(PASTHRU)



# --- MakeMaker dist_ci section:
ci :
	$(ABSPERLRUN) -MExtUtils::Manifest=maniread -e "@all = sort keys %{{ maniread() }};\
print(qq{{Executing $(CI) @all\n}});\
system(qq{{$(CI) @all}}) == 0 or die $$!;\
print(qq{{Executing $(RCS_LABEL) ...\n}});\
system(qq{{$(RCS_LABEL) @all}}) == 0 or die $$!;" --


# --- MakeMaker distmeta section:
distmeta : create_distdir metafile
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "exit unless -e q{{META.yml}};\
eval {{ maniadd({{q{{META.yml}} => q{{Module YAML meta-data (added by MakeMaker)}}}}) }}\
    or print \"Could not add META.yml to MANIFEST: $$$${{'^@'}}\n\"" --
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "exit unless -f q{{META.json}};\
eval {{ maniadd({{q{{META.json}} => q{{Module JSON meta-data (added by MakeMaker)}}}}) }}\
    or print \"Could not add META.json to MANIFEST: $$$${{'^@'}}\n\"" --



# --- MakeMaker distsignature section:
distsignature : distmeta
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "eval {{ maniadd({{q{{SIGNATURE}} => q{{Public-key signature (added by MakeMaker)}}}}) }}\
    or print \"Could not add SIGNATURE to MANIFEST: $$$${{'^@'}}\n\"" --
	$(NOECHO) cd $(DISTVNAME) && $(TOUCH) SIGNATURE
	cd $(DISTVNAME) && cpansign -s



# --- MakeMaker install section:

install :: pure_install doc_install
	$(NOECHO) $(NOOP)

install_perl :: pure_perl_install doc_perl_install
	$(NOECHO) $(NOOP)

install_site :: pure_site_install doc_site_install
	$(NOECHO) $(NOOP)

install_vendor :: pure_vendor_install doc_vendor_install
	$(NOECHO) $(NOOP)

pure_install :: pure_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

doc_install :: doc_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

pure__install : pure_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

doc__install : doc_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

pure_perl_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLARCHLIB)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLPRIVLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLARCHLIB)" \
		"$(INST_BIN)" "$(DESTINSTALLBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(SITEARCHEXP)\auto\$(FULLEXT)"


pure_site_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(SITEARCHEXP)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLSITEARCH)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLSITELIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLSITEARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLSITEBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSITESCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLSITEMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLSITEMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(PERL_ARCHLIB)\auto\$(FULLEXT)"

pure_vendor_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLVENDORARCH)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLVENDORLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLVENDORARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLVENDORBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLVENDORSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLVENDORMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLVENDORMAN3DIR)"


doc_perl_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" $(INSTALLPRIVLIB) \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"

doc_site_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" $(INSTALLSITELIB) \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"

doc_vendor_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" $(INSTALLVENDORLIB) \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"


uninstall :: uninstall_from_$(INSTALLDIRS)dirs
	$(NOECHO) $(NOOP)

uninstall_from_perldirs ::
	$(NOECHO) $(UNINSTALL) "$(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist"

uninstall_from_sitedirs ::
	$(NOECHO) $(UNINSTALL) "$(SITEARCHEXP)\auto\$(FULLEXT)\.packlist"

uninstall_from_vendordirs ::
	$(NOECHO) $(UNINSTALL) "$(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist"


# --- MakeMaker force section:
# Phony target to force checking subdirectories.
FORCE :
	$(NOECHO) $(NOOP)


# --- MakeMaker perldepend section:
PERL_HDRS = \
        $(PERL_INCDEP)/EXTERN.h            \
        $(PERL_INCDEP)/INTERN.h            \
        $(PERL_INCDEP)/XSUB.h            \
        $(PERL_INCDEP)/av.h            \
        $(PERL_INCDEP)/bitcount.h            \
        $(PERL_INCDEP)/charclass_invlists.h            \
        $(PERL_INCDEP)/config.h            \
        $(PERL_INCDEP)/cop.h            \
        $(PERL_INCDEP)/cv.h            \
        $(PERL_INCDEP)/dirent.h            \
        $(PERL_INCDEP)/dosish.h            \
        $(PERL_INCDEP)/embed.h            \
        $(PERL_INCDEP)/embedvar.h            \
        $(PERL_INCDEP)/fakesdio.h            \
        $(PERL_INCDEP)/feature.h            \
        $(PERL_INCDEP)/form.h            \
        $(PERL_INCDEP)/git_version.h            \
        $(PERL_INCDEP)/gv.h            \
        $(PERL_INCDEP)/handy.h            \
        $(PERL_INCDEP)/hv.h            \
        $(PERL_INCDEP)/hv_func.h            \
        $(PERL_INCDEP)/inline.h            \
        $(PERL_INCDEP)/intrpvar.h            \
        $(PERL_INCDEP)/iperlsys.h            \
        $(PERL_INCDEP)/keywords.h            \
        $(PERL_INCDEP)/l1_char_class_tab.h            \
        $(PERL_INCDEP)/malloc_ctl.h            \
        $(PERL_INCDEP)/metaconfig.h            \
        $(PERL_INCDEP)/mg.h            \
        $(PERL_INCDEP)/mg_data.h            \
        $(PERL_INCDEP)/mg_raw.h            \
        $(PERL_INCDEP)/mg_vtable.h            \
        $(PERL_INCDEP)/mydtrace.h            \
        $(PERL_INCDEP)/netdb.h            \
        $(PERL_INCDEP)/nostdio.h            \
        $(PERL_INCDEP)/op.h            \
        $(PERL_INCDEP)/op_reg_common.h            \
        $(PERL_INCDEP)/opcode.h            \
        $(PERL_INCDEP)/opnames.h            \
        $(PERL_INCDEP)/overload.h            \
        $(PERL_INCDEP)/pad.h            \
        $(PERL_INCDEP)/parser.h            \
        $(PERL_INCDEP)/patchlevel.h            \
        $(PERL_INCDEP)/perl.h            \
        $(PERL_INCDEP)/perlapi.h            \
        $(PERL_INCDEP)/perlhost.h            \
        $(PERL_INCDEP)/perlio.h            \
        $(PERL_INCDEP)/perliol.h            \
        $(PERL_INCDEP)/perlsdio.h            \
        $(PERL_INCDEP)/perlvars.h            \
        $(PERL_INCDEP)/perly.h            \
        $(PERL_INCDEP)/pp.h            \
        $(PERL_INCDEP)/pp_proto.h            \
        $(PERL_INCDEP)/proto.h            \
        $(PERL_INCDEP)/reentr.h            \
        $(PERL_INCDEP)/regcharclass.h            \
        $(PERL_INCDEP)/regcomp.h            \
        $(PERL_INCDEP)/regexp.h            \
        $(PERL_INCDEP)/regnodes.h            \
        $(PERL_INCDEP)/scope.h            \
        $(PERL_INCDEP)/sv.h            \
        $(PERL_INCDEP)/thread.h            \
        $(PERL_INCDEP)/time64.h            \
        $(PERL_INCDEP)/time64_config.h            \
        $(PERL_INCDEP)/uconfig.h            \
        $(PERL_INCDEP)/unicode_constants.h            \
        $(PERL_INCDEP)/unixish.h            \
        $(PERL_INCDEP)/utf8.h            \
        $(PERL_INCDEP)/utfebcdic.h            \
        $(PERL_INCDEP)/util.h            \
        $(PERL_INCDEP)/uudmap.h            \
        $(PERL_INCDEP)/vdir.h            \
        $(PERL_INCDEP)/vmem.h            \
        $(PERL_INCDEP)/vutil.h            \
        $(PERL_INCDEP)/warnings.h            \
        $(PERL_INCDEP)/win32.h            \
        $(PERL_INCDEP)/win32iop-o.h            \
        $(PERL_INCDEP)/win32iop.h            \
        $(PERL_INCDEP)/win32thread.h            \
        $(PERL_INCDEP)/wince.h            

$(OBJECT) : $(PERL_HDRS)

Constant.c Controls.c Event.c Frames.c GDI.c Window.c Wx.c : $(XSUBPPDEPS)


# --- MakeMaker makefile section:

$(OBJECT) : $(FIRST_MAKEFILE)

# We take a very conservative approach here, but it's worth it.
# We move Makefile to Makefile.old here to avoid gnu make looping.
$(FIRST_MAKEFILE) : Makefile.PL $(CONFIGDEP)
	$(NOECHO) $(ECHO) "Makefile out-of-date with respect to $?"
	$(NOECHO) $(ECHO) "Cleaning current config before rebuilding Makefile..."
	-$(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	-$(NOECHO) $(MV)   $(FIRST_MAKEFILE) $(MAKEFILE_OLD)
	- $(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) clean $(DEV_NULL)
	$(PERLRUN) Makefile.PL 
	$(NOECHO) $(ECHO) "==> Your Makefile has been rebuilt. <=="
	$(NOECHO) $(ECHO) "==> Please rerun the $(MAKE) command.  <=="
	$(FALSE)



# --- MakeMaker staticmake section:

# --- MakeMaker makeaperl section ---
MAP_TARGET    = perl
FULLPERL      = "C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin\perl.exe"

$(MAP_TARGET) :: static $(MAKE_APERL_FILE)
	$(MAKE) $(USEMAKEFILE) $(MAKE_APERL_FILE) $@

$(MAKE_APERL_FILE) : $(FIRST_MAKEFILE) pm_to_blib
	$(NOECHO) $(ECHO) Writing \"$(MAKE_APERL_FILE)\" for this $(MAP_TARGET)
	$(NOECHO) $(PERLRUNINST) \
		Makefile.PL DIR="ext" \
		MAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \
		MAKEAPERL=1 NORECURS=1 CCCDLFLAGS=


# --- MakeMaker test section:

TEST_VERBOSE=0
TEST_TYPE=test_$(LINKTYPE)
TEST_FILE = test.pl
TEST_FILES = t/*.t
TESTDB_SW = -d

testdb :: testdb_$(LINKTYPE)

test :: $(TEST_TYPE) subdirs-test

subdirs-test ::
	$(NOECHO) $(NOOP)

subdirs-test ::
	$(NOECHO) cd ext && $(MAKE) test $(PASTHRU)


test_dynamic :: pure_all
	$(FULLPERLRUN) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_dynamic :: pure_all
	$(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)

test_ : test_dynamic

test_static :: pure_all $(MAP_TARGET)
	./$(MAP_TARGET) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_static :: pure_all $(MAP_TARGET)
	./$(MAP_TARGET) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)



# --- MakeMaker ppd section:
# Creates a PPD (Perl Package Description) for a binary distribution.
ppd :
	$(NOECHO) $(ECHO) "<SOFTPKG NAME=\"$(DISTNAME)\" VERSION=\"$(VERSION)\">" > $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <ABSTRACT>interface to the wxWidgets cross-platform GUI toolkit</ABSTRACT>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <AUTHOR>Mattia Barbon &lt;mbarbon@cpan.org&gt;</AUTHOR>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    <IMPLEMENTATION>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <PERLCORE VERSION=\"5,006001,0,0\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Alien::wxWidgets\" VERSION=\"0.25\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"ExtUtils::MakeMaker\" VERSION=\"6.46\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"ExtUtils::ParseXS\" VERSION=\"3.15\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"ExtUtils::XSpp\" VERSION=\"0.1602\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Spec::Functions\" VERSION=\"0.82\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Test::Harness\" VERSION=\"2.26\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Test::More\" VERSION=\"0.45\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"if::\" VERSION=\"0.03\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <ARCHITECTURE NAME=\"MSWin32-x86-multi-thread-64int-5.20\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "        <CODEBASE HREF=\"\" />" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) "    </IMPLEMENTATION>" >> $(DISTNAME).ppd
	$(NOECHO) $(ECHO) ^</SOFTPKG^> >> $(DISTNAME).ppd


# --- MakeMaker pm_to_blib section:

pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  Wx.pm $(INST_LIB)\Wx.pm \
	  build/Wx/Overload/Driver.pm $(INST_LIB)\Wx\Overload\Driver.pm \
	  build/Wx/Overload/Handle.pm $(INST_LIB)\Wx\Overload\Handle.pm \
	  build/Wx/XSP/Enum.pm $(INST_LIB)\Wx\XSP\Enum.pm \
	  build/Wx/XSP/Event.pm $(INST_LIB)\Wx\XSP\Event.pm \
	  build/Wx/XSP/Overload.pm $(INST_LIB)\Wx\XSP\Overload.pm \
	  build/Wx/XSP/Virtual.pm $(INST_LIB)\Wx\XSP\Virtual.pm \
	  build/Wx/build/MakeMaker.pm $(INST_LIB)\Wx\build\MakeMaker.pm \
	  build/Wx/build/MakeMaker/Any_OS.pm $(INST_LIB)\Wx\build\MakeMaker\Any_OS.pm \
	  build/Wx/build/MakeMaker/Any_wx_config.pm $(INST_LIB)\Wx\build\MakeMaker\Any_wx_config.pm \
	  build/Wx/build/MakeMaker/Core.pm $(INST_LIB)\Wx\build\MakeMaker\Core.pm \
	  build/Wx/build/MakeMaker/Hacks.pm $(INST_LIB)\Wx\build\MakeMaker\Hacks.pm \
	  build/Wx/build/MakeMaker/MacOSX_GCC.pm $(INST_LIB)\Wx\build\MakeMaker\MacOSX_GCC.pm \
	  build/Wx/build/MakeMaker/Win32.pm $(INST_LIB)\Wx\build\MakeMaker\Win32.pm \
	  build/Wx/build/MakeMaker/Win32_MSVC.pm $(INST_LIB)\Wx\build\MakeMaker\Win32_MSVC.pm \
	  build/Wx/build/MakeMaker/Win32_MinGW.pm $(INST_LIB)\Wx\build\MakeMaker\Win32_MinGW.pm \
	  build/Wx/build/Options.pm $(INST_LIB)\Wx\build\Options.pm \
	  build/Wx/build/Utils.pm $(INST_LIB)\Wx\build\Utils.pm \
	  lib/Wx/Api.pod blib\lib\Wx\Api.pod \
	  lib/Wx/App.pm blib\lib\Wx\App.pm 
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  lib/Wx/ArtProvider.pm blib\lib\Wx\ArtProvider.pm \
	  lib/Wx/Event.pm blib\lib\Wx\Event.pm \
	  lib/Wx/Loader.pod blib\lib\Wx\Loader.pod \
	  lib/Wx/Locale.pm blib\lib\Wx\Locale.pm \
	  lib/Wx/Menu.pm blib\lib\Wx\Menu.pm \
	  lib/Wx/Mini.pm blib\lib\Wx\Mini.pm \
	  lib/Wx/NewClass.pod blib\lib\Wx\NewClass.pod \
	  lib/Wx/RadioBox.pm blib\lib\Wx\RadioBox.pm \
	  lib/Wx/Thread.pod blib\lib\Wx\Thread.pod \
	  lib/Wx/Timer.pm blib\lib\Wx\Timer.pm 
	$(NOECHO) $(TOUCH) pm_to_blib


# --- MakeMaker selfdocument section:


# --- MakeMaker postamble section:

blib\lib\Wx\Wx_Exp.pm : wxt_copy_files wxt_binary_$(LINKTYPE)
	$(PERL) script/make_exp_list.pl blib\lib\Wx\Wx_Exp.pm ./Constant.xs ./build/Wx/XSP/Enum.pm ./build/Wx/XSP/Event.pm ./cpp/controls.cpp ./ext/aui/AUI.xs ./ext/aui/XS/AuiManager.xsp ./ext/calendar/Calendar.pm ./ext/calendar/XS/CalendarCtrl.xsp ./ext/calendar/XS/DatePickerCtrl.xsp ./ext/calendar/XS/TimePickerCtrl.xsp ./ext/dataview/DataView.xs ./ext/dataview/XS/DataViewCtrl.xsp ./ext/dnd/cpp/dn_constants.cpp ./ext/dnd/lib/Wx/DND.pm ./ext/docview/cpp/dv_constants.cpp ./ext/filesys/FS.xs ./ext/grid/Grid.xs ./ext/grid/cpp/gr_constants.cpp ./ext/html/Html.xs ./ext/html/cpp/ht_constants.cpp ./ext/ipc/XS/IPC.xsp ./ext/media/cpp/me_constants.cpp ./ext/media/lib/Wx/Media.pm ./ext/print/cpp/pr_constants.cpp ./ext/propgrid/cpp/propgrid_constants.cpp ./ext/propgrid/XS/PGProperty.xsp ./ext/ribbon/cpp/ribbon_constants.cpp ./ext/ribbon/XS/RibbonArtProvider.xsp ./ext/richtext/RichText.xs ./ext/richtext/lib/Wx/RichText.pm ./ext/richtext/XS/RichTextCtrl.xsp ./ext/socket/cpp/sk_constants.cpp ./ext/stc/cpp/st_constants.cpp ./ext/stc/lib/Wx/STC.pm ./ext/webview/XS/WebViewV2.xsp ./ext/webview/XS/WebViewV3.xsp ./ext/xrc/cpp/xr_constants.cpp ./interface/wx/headercol.h ./interface/wx/headerctrl.h ./interface/wx/richtooltip.h ./interface/wx/treelist.h ./lib/Wx/Event.pm xspp/*.h ext/*/xspp/*.h

$(LINKTYPE) :: wxt_fix_alien blib\lib\Wx\Wx_Exp.pm

wxt_binary_static : $(INST_STATIC)
	$(NOECHO) $(TOUCH) wxt_binary_static

wxt_binary_dynamic : $(INST_DYNAMIC)
	$(NOECHO) $(TOUCH) wxt_binary_dynamic

wxt_copy_files :
	$(PERL) script/copy_files.pl files.lst
	$(TOUCH) wxt_copy_files

wxt_fix_alien : wxt_copy_files lib/Wx/Mini.pm
	$(PERL) script/fix_alien_path.pl lib/Wx/Mini.pm blib/lib/Wx/Mini.pm
	$(TOUCH) wxt_fix_alien

parser :
	yapp -v -s -m Wx::XSP::Grammar -o build/Wx/XSP/Grammar.pm build/Wx/XSP/XSP.yp

typemap : typemap.tmpl script/make_typemap.pl
	$(PERL) script/make_typemap.pl typemap.tmpl typemap

cpp/v_cback_def.h : script/make_v_cback.pl
	$(PERL) script/make_v_cback.pl > cpp/v_cback_def.h

wxt_overload :
	$(PERL) script/wxperl_overload cpp\ovl_const.cpp cpp\ovl_const.h overload.lst
	$(TOUCH) wxt_overload

XS\ItemContainer.xs : XS\ItemContainer.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\ItemContainer.xsp > XS\ItemContainer.xs

XS\ItemContainerImmutable.xs : XS\ItemContainerImmutable.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\ItemContainerImmutable.xsp > XS\ItemContainerImmutable.xs

XS\VarScrollHelperBase.xs : XS\VarScrollHelperBase.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\VarScrollHelperBase.xsp > XS\VarScrollHelperBase.xs

XS\VarVScrollHelper.xs : XS\VarVScrollHelper.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\VarVScrollHelper.xsp > XS\VarVScrollHelper.xs

XS\VarHScrollHelper.xs : XS\VarHScrollHelper.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\VarHScrollHelper.xsp > XS\VarHScrollHelper.xs

XS\VarHVScrollHelper.xs : XS\VarHVScrollHelper.xsp typemap.xsp
	$(PERL) -MExtUtils::XSpp::Cmd -e xspp -- -t typemap.xsp XS\VarHVScrollHelper.xsp > XS\VarHVScrollHelper.xs

generated : cpp/v_cback_def.h typemap XS/ItemContainer.xs XS/ItemContainerImmutable.xs XS/VarScrollHelperBase.xs XS/VarVScrollHelper.xs XS/VarHScrollHelper.xs XS/VarHVScrollHelper.xs wxt_overload


Wx_res.o : Wx.rc
	windres --target pe-i386 --include-dir C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\site\lib\Alien\wxWidgets\msw_3_0_2_uni_gcc_3_4\include Wx.rc Wx_res.o

# for compatibility
ppmdist : ppm

ppm : pure_all
	attrib -r blib\arch\auto\Wx\*.dll
	strip blib/arch/auto/Wx/*.dll
	attrib +r blib\arch\auto\Wx\*.dll

	C:\Users\TOSH\Documents\GitHub\dwimperl-windows\strawberry-perl-5.20.0.1-32bit-portable\perl\bin\perl.exe script/make_ppm.pl



# End.
